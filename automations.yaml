- id: away_mode_on
  alias: Away mode on
  trigger:
    platform: state
    entity_id: input_boolean.away_mode
    from: 'off'
    to: 'on'
  action:
  - service: climate.set_temperature
    data_template:
      entity_id: climate.livingroom
      temperature: 10
  - service: climate.set_temperature
    data_template:
      entity_id: climate.bedroom
      temperature: 10
  - service: climate.set_temperature
    data_template:
      entity_id: climate.multireg_thermostat_mode
      temperature: 10
- id: away_mode_off
  alias: Away mode off
  trigger:
    platform: state
    entity_id: input_boolean.away_mode
    from: 'on'
    to: 'off'
  action:
  - service: climate.set_temperature
    data_template:
      entity_id: climate.livingroom
      temperature: 19
  - service: climate.set_temperature
    data_template:
      entity_id: climate.bedroom
      temperature: 19
  - service: climate.set_temperature
    data_template:
      entity_id: climate.multireg_thermostat_mode
      temperature: 22
- id: reduce_day_temp
  alias: Increase day temp
  trigger:
  - platform: time
    at: 06:00:00
  condition:
  - condition: and
    conditions:
    - condition: time
      weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
      before: 00:00:00
      after: 00:00:00
    - condition: state
      entity_id: input_boolean.away_mode
      state: 'off'
  action:
  - service: climate.set_temperature
    data_template:
      entity_id: climate.livingroom
      temperature: 21
  - service: climate.set_temperature
    data_template:
      entity_id: climate.bedroom
      temperature: 17
  - service: climate.set_temperature
    data_template:
      entity_id: climate.multireg_thermostat_mode
      temperature: 17
  initial_state: true
  mode: single
- id: reset_day_temp
  alias: Reset day temp
  initial_state: true
  trigger:
    platform: time
    at: '15:00:00'
  condition:
  - condition: and
    conditions:
    - condition: time
      weekday:
      - mon
      - tue
      - wed
      - thu
      - fri
    - condition: state
      entity_id: input_boolean.away_mode
      state: 'off'
  action:
  - service: climate.set_temperature
    data_template:
      entity_id: climate.livingroom
      temperature: 21
  - service: climate.set_temperature
    data_template:
      entity_id: climate.bedroom
      temperature: 16
  - service: climate.set_temperature
    data_template:
      entity_id: climate.multireg_thermostat_mode
      temperature: 20
- id: set_evening_temp
  alias: Set evening temp
  initial_state: true
  trigger:
    platform: time
    at: '20:00:00'
  condition:
    condition: state
    entity_id: input_boolean.away_mode
    state: 'off'
  action:
  - service: climate.set_temperature
    data_template:
      entity_id: climate.bedroom
      temperature: 16
  - service: climate.set_temperature
    data_template:
      entity_id: climate.multireg_thermostat_mode
      temperature: 22
- id: reduce_night_temp
  alias: Reduce night temp
  trigger:
  - at: '21:00:00'
    platform: time
  condition:
  - condition: state
    entity_id: input_boolean.away_mode
    state: 'off'
  action:
  - data_template:
      entity_id: climate.multireg_thermostat_mode
      temperature: 18
    service: climate.set_temperature
  - data_template:
      entity_id: climate.livingroom
      temperature: 17
    service: climate.set_temperature
  initial_state: true
- id: reset_night_temp
  alias: Reset night temp
  trigger:
  - platform: time
    at: 04:00:00
  condition:
  - condition: state
    entity_id: input_boolean.away_mode
    state: 'off'
  action:
  - service: climate.set_temperature
    data_template:
      entity_id: climate.multireg_thermostat_mode
      temperature: 25
  - service: climate.set_temperature
    data_template:
      entity_id: climate.livingroom
      temperature: 18
  initial_state: true
- id: reduce_weekend_temp
  alias: Reduce weekend temp
  initial_state: true
  trigger:
    platform: time
    at: 09:00:00
  condition:
  - condition: and
    conditions:
    - condition: time
      weekday:
      - sat
      - sun
    - condition: state
      entity_id: input_boolean.away_mode
      state: 'off'
  action:
  - service: climate.set_temperature
    data_template:
      entity_id: climate.multireg_thermostat_mode
      temperature: 18
  - service: climate.set_temperature
    data_template:
      entity_id: climate.livingroom
      temperature: 19
  - service: climate.set_temperature
    data_template:
      entity_id: climate.bedroom
      temperature: 16
- id: reset_weekend_temp
  alias: Reset weekend temp
  initial_state: true
  trigger:
    platform: time
    at: '18:00:00'
  condition:
  - condition: and
    conditions:
    - condition: time
      weekday:
      - sat
      - sun
    - condition: state
      entity_id: input_boolean.away_mode
      state: 'off'
  action:
  - service: climate.set_temperature
    data_template:
      entity_id: climate.livingroom
      temperature: 20
- id: water_yucca_alert
  alias: Alarm me to water yucca palm
  trigger:
  - entity_id: device_tracker.c_iphone_3
    from: not_home
    platform: state
    to: home
  condition:
  - below: '15'
    condition: numeric_state
    entity_id: sensor.yucca_palm_moisture
  action:
  - data:
      message: Water Yucca Palm!
    service: notify.mobile_app_c_iphone
  initial_state: true
  mode: single
- id: water_succulent_alert
  alias: Alarm me to water succulent
  trigger:
  - entity_id: device_tracker.c_iphone_3
    from: not_home
    platform: state
    to: home
  condition:
  - below: '15'
    condition: numeric_state
    entity_id: sensor.succulent_moisture
  action:
  - data:
      message: Water Succulent!
    service: notify.mobile_app_c_iphone
  initial_state: true
  mode: single
- id: water_monstera_alert
  alias: Alarm me to water monstera
  trigger:
  - entity_id: device_tracker.c_iphone_3
    from: not_home
    platform: state
    to: home
  condition:
  - below: '24'
    condition: numeric_state
    entity_id: sensor.monstera_moisture
  action:
  - data:
      message: Water Monstera!
    service: notify.mobile_app_c_iphone
  initial_state: true
  mode: single
- id: water_money_alert
  alias: Alarm me to water money tree
  trigger:
  - entity_id: device_tracker.c_iphone_3
    from: not_home
    platform: state
    to: home
  condition:
  - below: '1'
    condition: numeric_state
    entity_id: sensor.money_tree_moisture
  action:
  - data:
      message: Water Money Tree!
    service: notify.mobile_app_c_iphone
  initial_state: true
  mode: single
- id: store_meter_readings_at_midnight
  alias: store_livingroom_energy_at_midnight
  initial_state: true
  trigger:
    platform: time
    at: 00:00:00
  action:
  - service: input_number.set_value
    data_template:
      entity_id: input_number.livingroom_energy_at_midnight
      value: '{{ states(''sensor.fibaro_wall_plug_livingroom_energy'')|float(default=0)
        }}'
  - service: input_number.set_value
    data_template:
      entity_id: input_number.bedroom_energy_at_midnight
      value: '{{ states(''sensor.fibaro_wall_plug_bedroom_energy'')|float(default=0)
        }}'
  - service: input_number.set_value
    data_template:
      entity_id: input_number.kitchen_energy_at_midnight
      value: '{{ states(''sensor.fibaro_wall_plug_kitchen_energy'')|float(default=0)
        }}'
  - service: input_number.set_value
    data_template:
      entity_id: input_number.livingroom_ceiling_energy_at_midnight
      value: '{{ states(''sensor.fibaro_dimmer_livingroom_energy'')|float(default=0)
        }}'
- id: freeze_detection_livingroom
  alias: freeze_detection_livingroom
  initial_state: true
  trigger:
    platform: time_pattern
    minutes: /30
    seconds: 0
  condition:
    condition: template
    value_template: '{{ (as_timestamp(now())-as_timestamp(states.sensor.livingroom_temperature.last_updated))
      > 1200 }}'
  action:
  - data:
      message: Livingroom sensor frozen!
    service: notify.mobile_app_c_iphone
- id: freeze_detection_bedroom
  alias: freeze_detection_bedroom
  initial_state: true
  trigger:
    platform: time_pattern
    minutes: /30
    seconds: 0
  condition:
    condition: template
    value_template: '{{ (as_timestamp(now())-as_timestamp(states.sensor.bedroom_temperature.last_updated))
      > 1200 }}'
  action:
  - data:
      message: Bedroom sensor frozen!
    service: notify.mobile_app_c_iphone
- id: freeze_detection_kitchen
  alias: freeze_detection_kitchen
  initial_state: false
  trigger:
    platform: time_pattern
    minutes: /30
    seconds: 0
  condition:
    condition: template
    value_template: '{{ (as_timestamp(now())-as_timestamp(states.sensor.kitchen_temperature.last_updated))
      > 1200 }}'
  action:
  - data:
      message: Kitchen sensor frozen!
    service: notify.mobile_app_c_iphone
- id: Set_dishwasher_active
  alias: Set dishwasher active when power detected
  trigger:
  - above: '18'
    entity_id: sensor.fibaro_wall_plug_kitchen_power
    platform: numeric_state
  condition:
  - condition: or
    conditions:
    - condition: state
      entity_id: input_select.dishwasher_status
      state: Dirty
    - condition: state
      entity_id: input_select.dishwasher_status
      state: Clean
  action:
  - data:
      entity_id: input_select.dishwasher_status
      option: Running
    service: input_select.select_option
- id: Set_dishwasher_clean
  alias: Set dishwasher clean
  trigger:
  - platform: numeric_state
    entity_id: sensor.fibaro_wall_plug_kitchen_power
    below: 1
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: input_select.dishwasher_status
      state: Running
  action:
  - service: input_select.select_option
    data:
      entity_id: input_select.dishwasher_status
      option: Clean
- id: Set_dishwasher_dirty
  alias: Set Dishwasher dirty when power off
  initial_state: false
  trigger:
  - entity_id: input_select.dishwasher_status
    platform: state
    to: Clean
    for: 00:00:05
  - entity_id: device_tracker.c_iphone_3
    for: 0:15:00
    platform: state
    to: home
  condition:
  - condition: and
    conditions:
    - below: '1'
      condition: numeric_state
      entity_id: sensor.fibaro_wall_plug_kitchen_power
    - condition: state
      entity_id: input_select.dishwasher_status
      state: Clean
    - condition: state
      entity_id: device_tracker.c_iphone_3
      state: home
  action:
  - data:
      entity_id: input_select.dishwasher_status
      option: Dirty
    service: input_select.select_option
  mode: single
- id: dishwasher_alert
  alias: Send alert when dishwasher is clean
  trigger:
  - entity_id: input_select.dishwasher_status
    platform: state
    to: Clean
  - at: 07:00:00
    platform: time
  - entity_id: device_tracker.c_iphone_3
    for: 0:10:00
    platform: state
    to: home
  condition:
  - condition: and
    conditions:
    - after: 07:00:00
      before: '23:59:00'
      condition: time
    - condition: state
      entity_id: device_tracker.c_iphone_3
      state: home
    - condition: template
      value_template: "{% if states.automation.send_alert_when_dishwasher_is_clean.last_triggered\
        \ is not none %}\n  {% if as_timestamp(now()) | int   -  as_timestamp(states.automation.send_alert_when_dishwasher_is_clean.attributes.last_triggered)\
        \ | int > 1800 %} true {% else %} false\n  {% endif %}\n{% else %} false {%\
        \ endif %}\n"
    - condition: state
      entity_id: input_select.dishwasher_status
      state: Clean
  action:
  - data:
      message: Empty Dishwasher!
    service: notify.mobile_app_c_iphone
  - data:
      message: Empty Dishwasher!
    service: persistent_notification.create
  - data:
      entity_id: input_select.dishwasher_status
      option: Closed
    service: input_select.select_option
  mode: single
- id: '1602090292559'
  alias: Alarm me if RPi power supply is not ok
  description: ''
  trigger:
  - platform: state
    entity_id: binary_sensor.rpi_power_status
    to: 'on'
  - platform: time
    at: '20:00:00'
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: device_tracker.c_iphone_3
      state: home
    - condition: state
      entity_id: binary_sensor.rpi_power_status
      state: 'on'
  action:
  - service: persistent_notification.create
    data:
      message: Check Raspberry PI power supply!
  mode: single
- id: '1636490495909'
  alias: Align Ikea lights
  description: ''
  trigger:
  - platform: event
    event_type: light.turn_on
    context:
      user_id:
      - 6d579d136e4b4fa88d056168b16ccc5e
      - 8af7c12125f046d19a65acf8bdf4d8f8
    id: '1'
  - platform: state
    entity_id: light.tradfri_bulb_e27_ws_opal_980lm
    from: 'off'
    to: 'on'
  condition:
  - condition: and
    conditions:
    - condition: state
      entity_id: light.tradfri_bulb_e27_ws_opal_980lm_2
      state: 'on'
    - condition: not
      conditions:
      - condition: trigger
        id: '1'
  action:
  - service: light.turn_on
    data: {}
    target:
      entity_id: light.tradfri_bulb_e27_ws_opal_980lm
  mode: single
